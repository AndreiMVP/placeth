{
	"id": "0cd4623158354ae23343412647e7b82f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/placePixel.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@shotaronowhere]\n */\n\npragma solidity ^0.7.6;\n\nimport \"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\";\n\ncontract placePixel {\n\n    event PixelsChange(uint64 _n, bytes _pixels);\n    uint256 public costPerPixel;\n    uint256 public challengePeriod;\n    uint256 public length;\n    mapping (address=>uint256) public deposit;\n\n    constructor(uint256 _costPerPixel, uint256 _challengePeriod) {\n        costPerPixel = _costPerPixel;\n        challengePeriod = _challengePeriod;\n    }\n\n    function claim(bytes calldata data) external {\n    }\n\n    function changePixels(bytes calldata _pixels) external{\n        //emit PixelsChange(_n, _pixels);\n        length = _pixels.length; \n    }\n\n    function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{\n        require(xx >= x, \"Invald area.\");\n        require(yy >= y, \"Invald area.\");\n        require(msg.value > (xx-x+1)*(yy-y+1)*costPerPixel, \"Insufficient deposit.\");\n        deposit[msg.sender] = msg.value;\n    }\n\n    function withdrawDeposit() external{\n\n    }\n}\n"
			},
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@hbarcelos]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.7.6;\n\n/**\n *  @title IRealitio\n *  @dev Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.\n */\ninterface IRealitio {\n    /// @notice Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\n    /// @dev The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\n    /// @param question_id The ID of the question\n    /// @param requester The account that requested arbitration\n    /// @param max_previous If specified, reverts if a bond higher than this was submitted after you sent your transaction.\n    function notifyOfArbitrationRequest(\n        bytes32 question_id,\n        address requester,\n        uint256 max_previous\n    ) external;\n\n    /// @notice Submit the answer for a question, for use by the arbitrator.\n    /// @dev Doesn't require (or allow) a bond. Required only in v2.0.\n    /// If the current final answer is correct, the account should be whoever submitted it.\n    /// If the current final answer is wrong, the account should be whoever paid for arbitration.\n    /// However, the answerer stipulations are not enforced by the contract.\n    /// @param question_id The ID of the question.\n    /// @param answer The answer, encoded into bytes32.\n    /// @param answerer The account credited with this answer for the purpose of bond claims.\n    function submitAnswerByArbitrator(\n        bytes32 question_id,\n        bytes32 answer,\n        address answerer\n    ) external;\n\n    /// @notice Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\n    /// @dev Required only in v2.0.\n    /// @param question_id The ID of the question.\n    /// @dev Updated on each answer, then rewound as each is claimed.\n    function getHistoryHash(bytes32 question_id) external view returns (bytes32);\n\n    /// @notice Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\n    /// @dev Required only in v2.0.\n    /// @param commitment_id The ID of the commitment.\n    /// @return Time after which the committed answer can be revealed.\n    /// @return Whether the commitment has already been revealed or not.\n    /// @return The committed answer, encoded as bytes32.\n    function commitments(bytes32 commitment_id)\n        external\n        view\n        returns (\n            uint32,\n            bool,\n            bytes32\n        );\n\n    /// @notice Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\n    /// @dev Doesn't require (or allow) a bond. Required only in v2.1.\n    /// @param question_id The ID of the question\n    /// @param answer The answer, encoded into bytes32\n    /// @param payee_if_wrong The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\n    /// @param last_history_hash The history hash before the final one\n    /// @param last_answer_or_commitment_id The last answer given, or the commitment ID if it was a commitment.\n    /// @param last_answerer The address that supplied the last answer\n    function assignWinnerAndSubmitAnswerByArbitrator(\n        bytes32 question_id,\n        bytes32 answer,\n        address payee_if_wrong,\n        bytes32 last_history_hash,\n        bytes32 last_answer_or_commitment_id,\n        address last_answerer\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"IRealitio": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "answer",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "payee_if_wrong",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "last_history_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "last_answer_or_commitment_id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "last_answerer",
									"type": "address"
								}
							],
							"name": "assignWinnerAndSubmitAnswerByArbitrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "commitment_id",
									"type": "bytes32"
								}
							],
							"name": "commitments",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								}
							],
							"name": "getHistoryHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "max_previous",
									"type": "uint256"
								}
							],
							"name": "notifyOfArbitrationRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "answer",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "answerer",
									"type": "address"
								}
							],
							"name": "submitAnswerByArbitrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.",
						"kind": "dev",
						"methods": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": {
								"details": "Doesn't require (or allow) a bond. Required only in v2.1.",
								"params": {
									"answer": "The answer, encoded into bytes32",
									"last_answer_or_commitment_id": "The last answer given, or the commitment ID if it was a commitment.",
									"last_answerer": "The address that supplied the last answer",
									"last_history_hash": "The history hash before the final one",
									"payee_if_wrong": "The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator",
									"question_id": "The ID of the question"
								}
							},
							"commitments(bytes32)": {
								"details": "Required only in v2.0.",
								"params": {
									"commitment_id": "The ID of the commitment."
								},
								"returns": {
									"_0": "Time after which the committed answer can be revealed.",
									"_1": "Whether the commitment has already been revealed or not.",
									"_2": "The committed answer, encoded as bytes32."
								}
							},
							"getHistoryHash(bytes32)": {
								"details": "Required only in v2.0.Updated on each answer, then rewound as each is claimed.",
								"params": {
									"question_id": "The ID of the question."
								}
							},
							"notifyOfArbitrationRequest(bytes32,address,uint256)": {
								"details": "The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.",
								"params": {
									"max_previous": "If specified, reverts if a bond higher than this was submitted after you sent your transaction.",
									"question_id": "The ID of the question",
									"requester": "The account that requested arbitration"
								}
							},
							"submitAnswerByArbitrator(bytes32,bytes32,address)": {
								"details": "Doesn't require (or allow) a bond. Required only in v2.0. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.",
								"params": {
									"answer": "The answer, encoded into bytes32.",
									"answerer": "The account credited with this answer for the purpose of bond claims.",
									"question_id": "The ID of the question."
								}
							}
						},
						"title": "IRealitio",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": "d44e293c",
							"commitments(bytes32)": "839df945",
							"getHistoryHash(bytes32)": "82ffa9f7",
							"notifyOfArbitrationRequest(bytes32,address,uint256)": "f6a94ecb",
							"submitAnswerByArbitrator(bytes32,bytes32,address)": "fe92049d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"payee_if_wrong\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"last_history_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"last_answer_or_commitment_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"last_answerer\",\"type\":\"address\"}],\"name\":\"assignWinnerAndSubmitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment_id\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getHistoryHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"}],\"name\":\"notifyOfArbitrationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"}],\"name\":\"submitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.\",\"kind\":\"dev\",\"methods\":{\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond. Required only in v2.1.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"last_answer_or_commitment_id\":\"The last answer given, or the commitment ID if it was a commitment.\",\"last_answerer\":\"The address that supplied the last answer\",\"last_history_hash\":\"The history hash before the final one\",\"payee_if_wrong\":\"The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\",\"question_id\":\"The ID of the question\"}},\"commitments(bytes32)\":{\"details\":\"Required only in v2.0.\",\"params\":{\"commitment_id\":\"The ID of the commitment.\"},\"returns\":{\"_0\":\"Time after which the committed answer can be revealed.\",\"_1\":\"Whether the commitment has already been revealed or not.\",\"_2\":\"The committed answer, encoded as bytes32.\"}},\"getHistoryHash(bytes32)\":{\"details\":\"Required only in v2.0.Updated on each answer, then rewound as each is claimed.\",\"params\":{\"question_id\":\"The ID of the question.\"}},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"details\":\"The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\",\"params\":{\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\",\"requester\":\"The account that requested arbitration\"}},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond. Required only in v2.0. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.\",\"params\":{\"answer\":\"The answer, encoded into bytes32.\",\"answerer\":\"The account credited with this answer for the purpose of bond claims.\",\"question_id\":\"The ID of the question.\"}}},\"title\":\"IRealitio\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\"},\"commitments(bytes32)\":{\"notice\":\"Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\"},\"getHistoryHash(bytes32)\":{\"notice\":\"Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\"},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"notice\":\"Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\"},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":\"IRealitio\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":{\"keccak256\":\"0x40520a925e9342f10f31f4c324be4a0da640e09d362166e5d53df1af45716940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f612effc7a157094eb24f529d510314900f8059a94041f3a1bb033855ddc2454\",\"dweb:/ipfs/QmeMoqcWaNFY29fjciDoGJAhzKo3RfknsRosL9X2hZYTWa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": {
								"notice": "Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details."
							},
							"commitments(bytes32)": {
								"notice": "Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct."
							},
							"getHistoryHash(bytes32)": {
								"notice": "Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct."
							},
							"notifyOfArbitrationRequest(bytes32,address,uint256)": {
								"notice": "Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision."
							},
							"submitAnswerByArbitrator(bytes32,bytes32,address)": {
								"notice": "Submit the answer for a question, for use by the arbitrator."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/placePixel.sol": {
				"placePixel": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_costPerPixel",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_challengePeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "_n",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_pixels",
									"type": "bytes"
								}
							],
							"name": "PixelsChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "challengePeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_pixels",
									"type": "bytes"
								}
							],
							"name": "changePixels",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "costPerPixel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "length",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "x",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "y",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "xx",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "yy",
									"type": "uint16"
								}
							],
							"name": "lock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/placePixel.sol\":175:1094  contract placePixel {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/placePixel.sol\":396:546  constructor(uint256 _costPerPixel, uint256 _challengePeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"contracts/placePixel.sol\":467:479  costPerPixel */\n  0x00\n    /* \"contracts/placePixel.sol\":467:495  costPerPixel = _costPerPixel */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/placePixel.sol\":505:520  challengePeriod */\n  0x01\n    /* \"contracts/placePixel.sol\":505:539  challengePeriod = _challengePeriod */\n  sstore\n    /* \"contracts/placePixel.sol\":175:1094  contract placePixel {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/placePixel.sol\":175:1094  contract placePixel {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb3d7a2d2\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xb3d7a2d2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc63ff8dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf340fa01\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf3f480d9\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x117df088\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f7b6d32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x585dcc0a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb015852e\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/placePixel.sol\":1049:1092  function withdrawDeposit() external{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/placePixel.sol\":321:342  uint256 public length */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/placePixel.sol\":252:279  uint256 public costPerPixel */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_15\n      tag_19\n      jump\t// in\n        /* \"contracts/placePixel.sol\":753:1043  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      0xffff\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      dup2\n      and\n      swap2\n      0x60\n      add\n      calldataload\n      and\n      tag_22\n      jump\t// in\n        /* \"contracts/placePixel.sol\":610:747  function changePixels(bytes calldata _pixels) external{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_29\n      jump\t// in\n        /* \"contracts/placePixel.sol\":552:604  function claim(bytes calldata data) external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_36\n      jump\t// in\n        /* \"contracts/placePixel.sol\":348:389  mapping (address=>uint256) public deposit */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"contracts/placePixel.sol\":285:315  uint256 public challengePeriod */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_15\n      tag_43\n      jump\t// in\n        /* \"contracts/placePixel.sol\":1049:1092  function withdrawDeposit() external{... */\n    tag_13:\n      jump\t// out\n        /* \"contracts/placePixel.sol\":321:342  uint256 public length */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/placePixel.sol\":252:279  uint256 public costPerPixel */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/placePixel.sol\":753:1043  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n    tag_22:\n        /* \"contracts/placePixel.sol\":849:850  x */\n      dup4\n        /* \"contracts/placePixel.sol\":843:850  xx >= x */\n      0xffff\n      and\n        /* \"contracts/placePixel.sol\":843:845  xx */\n      dup3\n        /* \"contracts/placePixel.sol\":843:850  xx >= x */\n      0xffff\n      and\n      lt\n      iszero\n        /* \"contracts/placePixel.sol\":835:867  require(xx >= x, \"Invald area.\") */\n      tag_46\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b6321030b932b097)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/placePixel.sol\":891:892  y */\n      dup3\n        /* \"contracts/placePixel.sol\":885:892  yy >= y */\n      0xffff\n      and\n        /* \"contracts/placePixel.sol\":885:887  yy */\n      dup2\n        /* \"contracts/placePixel.sol\":885:892  yy >= y */\n      0xffff\n      and\n      lt\n      iszero\n        /* \"contracts/placePixel.sol\":877:909  require(yy >= y, \"Invald area.\") */\n      tag_47\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b6321030b932b097)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/placePixel.sol\":957:969  costPerPixel */\n      sload(0x00)\n        /* \"contracts/placePixel.sol\":952:953  y */\n      dup4\n        /* \"contracts/placePixel.sol\":949:951  yy */\n      dup3\n        /* \"contracts/placePixel.sol\":949:953  yy-y */\n      sub\n        /* \"contracts/placePixel.sol\":954:955  1 */\n      0x01\n        /* \"contracts/placePixel.sol\":949:955  yy-y+1 */\n      add\n        /* \"contracts/placePixel.sol\":943:944  x */\n      dup6\n        /* \"contracts/placePixel.sol\":940:942  xx */\n      dup5\n        /* \"contracts/placePixel.sol\":940:944  xx-x */\n      sub\n        /* \"contracts/placePixel.sol\":945:946  1 */\n      0x01\n        /* \"contracts/placePixel.sol\":940:946  xx-x+1 */\n      add\n        /* \"contracts/placePixel.sol\":939:956  (xx-x+1)*(yy-y+1) */\n      mul\n        /* \"contracts/placePixel.sol\":939:969  (xx-x+1)*(yy-y+1)*costPerPixel */\n      0xffff\n      and\n      mul\n        /* \"contracts/placePixel.sol\":927:936  msg.value */\n      callvalue\n        /* \"contracts/placePixel.sol\":927:969  msg.value > (xx-x+1)*(yy-y+1)*costPerPixel */\n      gt\n        /* \"contracts/placePixel.sol\":919:995  require(msg.value > (xx-x+1)*(yy-y+1)*costPerPixel, \"Insufficient deposit.\") */\n      tag_48\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x24b739bab33334b1b4b2b73a103232b837b9b4ba17)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_48:\n      pop\n      pop\n        /* \"contracts/placePixel.sol\":1013:1023  msg.sender */\n      caller\n        /* \"contracts/placePixel.sol\":1005:1024  deposit[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/placePixel.sol\":1005:1012  deposit */\n      0x03\n        /* \"contracts/placePixel.sol\":1005:1024  deposit[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/placePixel.sol\":1027:1036  msg.value */\n      callvalue\n        /* \"contracts/placePixel.sol\":1005:1036  deposit[msg.sender] = msg.value */\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/placePixel.sol\":753:1043  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n      jump\t// out\n        /* \"contracts/placePixel.sol\":610:747  function changePixels(bytes calldata _pixels) external{... */\n    tag_29:\n        /* \"contracts/placePixel.sol\":716:722  length */\n      0x02\n        /* \"contracts/placePixel.sol\":716:739  length = _pixels.length */\n      sstore\n      pop\n        /* \"contracts/placePixel.sol\":610:747  function changePixels(bytes calldata _pixels) external{... */\n      jump\t// out\n        /* \"contracts/placePixel.sol\":552:604  function claim(bytes calldata data) external {... */\n    tag_36:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/placePixel.sol\":348:389  mapping (address=>uint256) public deposit */\n    tag_40:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/placePixel.sol\":285:315  uint256 public challengePeriod */\n    tag_43:\n      sload(0x01)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f8d879391fcd69b8328e22f28e72d5ce67b2904f2f25f70843e206166562209964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104183803806104188339818101604052604081101561003357600080fd5b5080516020909101516000919091556001556103c4806100546000396000f3fe60806040526004361061007b5760003560e01c8063b3d7a2d21161004e578063b3d7a2d21461010c578063c63ff8dd14610189578063f340fa0114610206578063f3f480d9146102395761007b565b8063117df088146100805780631f7b6d3214610097578063585dcc0a146100be578063b015852e146100d3575b600080fd5b34801561008c57600080fd5b5061009561024e565b005b3480156100a357600080fd5b506100ac610250565b60408051918252519081900360200190f35b3480156100ca57600080fd5b506100ac610256565b610095600480360360808110156100e957600080fd5b5061ffff813581169160208101358216916040820135811691606001351661025c565b34801561011857600080fd5b506100956004803603602081101561012f57600080fd5b81019060208101813564010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184600183028401116401000000008311171561017e57600080fd5b50909250905061036c565b34801561019557600080fd5b50610095600480360360208110156101ac57600080fd5b8101906020810181356401000000008111156101c757600080fd5b8201836020820111156101d957600080fd5b803590602001918460018302840111640100000000831117156101fb57600080fd5b509092509050610372565b34801561021257600080fd5b506100ac6004803603602081101561022957600080fd5b50356001600160a01b0316610376565b34801561024557600080fd5b506100ac610388565b565b60025481565b60005481565b8361ffff168261ffff1610156102a8576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b8261ffff168161ffff1610156102f4576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b6000548382036001018584036001010261ffff16023411610354576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103232b837b9b4ba1760591b604482015290519081900360640190fd5b50503360009081526003602052604090203490555050565b60025550565b5050565b60036020526000908152604090205481565b6001548156fea2646970667358221220f8d879391fcd69b8328e22f28e72d5ce67b2904f2f25f70843e206166562209964736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x418 CODESIZE SUB DUP1 PUSH2 0x418 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE PUSH2 0x3C4 DUP1 PUSH2 0x54 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB3D7A2D2 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xB3D7A2D2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC63FF8DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF3F480D9 EQ PUSH2 0x239 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x117DF088 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x585DCC0A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xB015852E EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x256 JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 ADD CALLDATALOAD AND PUSH2 0x25C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x372 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x376 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x388 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 DUP3 SUB PUSH1 0x1 ADD DUP6 DUP5 SUB PUSH1 0x1 ADD MUL PUSH2 0xFFFF AND MUL CALLVALUE GT PUSH2 0x354 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103232B837B9B4BA17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLVALUE SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xD8 PUSH26 0x391FCD69B8328E22F28E72D5CE67B2904F2F25F70843E2061665 PUSH3 0x209964 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "175:919:1:-:0;;;396:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:150:1;;;;;;;467:12;:28;;;;505:15;:34;175:919;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063b3d7a2d21161004e578063b3d7a2d21461010c578063c63ff8dd14610189578063f340fa0114610206578063f3f480d9146102395761007b565b8063117df088146100805780631f7b6d3214610097578063585dcc0a146100be578063b015852e146100d3575b600080fd5b34801561008c57600080fd5b5061009561024e565b005b3480156100a357600080fd5b506100ac610250565b60408051918252519081900360200190f35b3480156100ca57600080fd5b506100ac610256565b610095600480360360808110156100e957600080fd5b5061ffff813581169160208101358216916040820135811691606001351661025c565b34801561011857600080fd5b506100956004803603602081101561012f57600080fd5b81019060208101813564010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184600183028401116401000000008311171561017e57600080fd5b50909250905061036c565b34801561019557600080fd5b50610095600480360360208110156101ac57600080fd5b8101906020810181356401000000008111156101c757600080fd5b8201836020820111156101d957600080fd5b803590602001918460018302840111640100000000831117156101fb57600080fd5b509092509050610372565b34801561021257600080fd5b506100ac6004803603602081101561022957600080fd5b50356001600160a01b0316610376565b34801561024557600080fd5b506100ac610388565b565b60025481565b60005481565b8361ffff168261ffff1610156102a8576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b8261ffff168161ffff1610156102f4576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b6000548382036001018584036001010261ffff16023411610354576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103232b837b9b4ba1760591b604482015290519081900360640190fd5b50503360009081526003602052604090203490555050565b60025550565b5050565b60036020526000908152604090205481565b6001548156fea2646970667358221220f8d879391fcd69b8328e22f28e72d5ce67b2904f2f25f70843e206166562209964736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB3D7A2D2 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xB3D7A2D2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC63FF8DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF3F480D9 EQ PUSH2 0x239 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x117DF088 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x585DCC0A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xB015852E EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x256 JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 ADD CALLDATALOAD AND PUSH2 0x25C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x372 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x376 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x388 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 DUP3 SUB PUSH1 0x1 ADD DUP6 DUP5 SUB PUSH1 0x1 ADD MUL PUSH2 0xFFFF AND MUL CALLVALUE GT PUSH2 0x354 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103232B837B9B4BA17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLVALUE SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xD8 PUSH26 0x391FCD69B8328E22F28E72D5CE67B2904F2F25F70843E2061665 PUSH3 0x209964 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "175:919:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:43;;;;;;;;;;;;;:::i;:::-;;321:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;252:27;;;;;;;;;;;;;:::i;753:290::-;;;;;;;;;;;;;;;;-1:-1:-1;753:290:1;;;;;;;;;;;;;;;;;;;;;;;;;:::i;610:137::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;610:137:1;;-1:-1:-1;610:137:1;-1:-1:-1;610:137:1;:::i;552:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;552:52:1;;-1:-1:-1;552:52:1;-1:-1:-1;552:52:1;:::i;348:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:41:1;-1:-1:-1;;;;;348:41:1;;:::i;285:30::-;;;;;;;;;;;;;:::i;1049:43::-;:::o;321:21::-;;;;:::o;252:27::-;;;;:::o;753:290::-;849:1;843:7;;:2;:7;;;;835:32;;;;;-1:-1:-1;;;835:32:1;;;;;;;;;;;;-1:-1:-1;;;835:32:1;;;;;;;;;;;;;;;891:1;885:7;;:2;:7;;;;877:32;;;;;-1:-1:-1;;;877:32:1;;;;;;;;;;;;-1:-1:-1;;;877:32:1;;;;;;;;;;;;;;;957:12;;952:1;949:2;:4;954:1;949:6;943:1;940:2;:4;945:1;940:6;939:17;:30;;;927:9;:42;919:76;;;;;-1:-1:-1;;;919:76:1;;;;;;;;;;;;-1:-1:-1;;;919:76:1;;;;;;;;;;;;;;;-1:-1:-1;;1013:10:1;1005:19;;;;:7;:19;;;;;1027:9;1005:31;;-1:-1:-1;;753:290:1:o;610:137::-;716:6;:23;-1:-1:-1;610:137:1:o;552:52::-;;;:::o;348:41::-;;;;;;;;;;;;;:::o;285:30::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"challengePeriod()": "1064",
								"changePixels(bytes)": "20359",
								"claim(bytes)": "380",
								"costPerPixel()": "1043",
								"deposit(address)": "1168",
								"length()": "1021",
								"lock(uint16,uint16,uint16,uint16)": "21326",
								"withdrawDeposit()": "145"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 396,
									"end": 546,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 546,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 495,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 495,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 505,
									"end": 539,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1094,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8d879391fcd69b8328e22f28e72d5ce67b2904f2f25f70843e206166562209964736f6c63430007060033",
									".code": [
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "B3D7A2D2"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "B3D7A2D2"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "C63FF8DD"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "F340FA01"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "F3F480D9"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "117DF088"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "1F7B6D32"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "585DCC0A"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "B015852E"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 1094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1092,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 843,
											"end": 850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 843,
											"end": 845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 843,
											"end": 850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B6321030B932B097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 835,
											"end": 867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 885,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 885,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 885,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 885,
											"end": 892,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B6321030B932B097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 952,
											"end": 953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 949,
											"end": 951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 949,
											"end": 953,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 949,
											"end": 955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 940,
											"end": 942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 940,
											"end": 944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 945,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 939,
											"end": 956,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 939,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 939,
											"end": 969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 939,
											"end": 969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 927,
											"end": 936,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 927,
											"end": 969,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A103232B837B9B4BA17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 919,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 919,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1036,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 753,
											"end": 1043,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 722,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 739,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 610,
											"end": 747,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 604,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 348,
											"end": 389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 315,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 315,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"challengePeriod()": "f3f480d9",
							"changePixels(bytes)": "b3d7a2d2",
							"claim(bytes)": "c63ff8dd",
							"costPerPixel()": "585dcc0a",
							"deposit(address)": "f340fa01",
							"length()": "1f7b6d32",
							"lock(uint16,uint16,uint16,uint16)": "b015852e",
							"withdrawDeposit()": "117df088"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_costPerPixel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_challengePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_n\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_pixels\",\"type\":\"bytes\"}],\"name\":\"PixelsChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"challengePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_pixels\",\"type\":\"bytes\"}],\"name\":\"changePixels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costPerPixel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"x\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"y\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"xx\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"yy\",\"type\":\"uint16\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/placePixel.sol\":\"placePixel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":{\"keccak256\":\"0x40520a925e9342f10f31f4c324be4a0da640e09d362166e5d53df1af45716940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f612effc7a157094eb24f529d510314900f8059a94041f3a1bb033855ddc2454\",\"dweb:/ipfs/QmeMoqcWaNFY29fjciDoGJAhzKo3RfknsRosL9X2hZYTWa\"]},\"contracts/placePixel.sol\":{\"keccak256\":\"0xc9dacfe4c035cc811a5cabfe27e4d6159b8910acf37e6e45df3fdd79f506d2d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3515486637b6ece4ab72625d4d40bf9889c77d693a55e2698f7ed561d04932\",\"dweb:/ipfs/QmbTxGFwLfzRJY1QAv3oi6cwCxbkJhHpakQqwRseKqjDwi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "contracts/placePixel.sol:placePixel",
								"label": "costPerPixel",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "contracts/placePixel.sol:placePixel",
								"label": "challengePeriod",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 74,
								"contract": "contracts/placePixel.sol:placePixel",
								"label": "length",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "contracts/placePixel.sol:placePixel",
								"label": "deposit",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"ast": {
					"absolutePath": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
					"exportedSymbols": {
						"IRealitio": [
							59
						]
					},
					"id": 60,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "157:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "182:183:0",
								"text": "  @title IRealitio\n  @dev Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator."
							},
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "IRealitio",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "392:470:0",
										"text": "@notice Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\n @dev The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\n @param question_id The ID of the question\n @param requester The account that requested arbitration\n @param max_previous If specified, reverts if a bond higher than this was submitted after you sent your transaction."
									},
									"functionSelector": "f6a94ecb",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyOfArbitrationRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "912:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "requester",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "941:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "max_previous",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "968:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:92:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:0"
									},
									"scope": 59,
									"src": "867:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "1010:611:0",
										"text": "@notice Submit the answer for a question, for use by the arbitrator.\n @dev Doesn't require (or allow) a bond. Required only in v2.0.\n If the current final answer is correct, the account should be whoever submitted it.\n If the current final answer is wrong, the account should be whoever paid for arbitration.\n However, the answerer stipulations are not enforced by the contract.\n @param question_id The ID of the question.\n @param answer The answer, encoded into bytes32.\n @param answerer The account credited with this answer for the purpose of bond claims."
									},
									"functionSelector": "fe92049d",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitAnswerByArbitrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1669:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "answerer",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1659:85:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:0"
									},
									"scope": 59,
									"src": "1626:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1760:292:0",
										"text": "@notice Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\n @dev Required only in v2.0.\n @param question_id The ID of the question.\n @dev Updated on each answer, then rewound as each is claimed."
									},
									"functionSelector": "82ffa9f7",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHistoryHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "2081:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 24,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:21:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "2125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:9:0"
									},
									"scope": 59,
									"src": "2057:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2140:425:0",
										"text": "@notice Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\n @dev Required only in v2.0.\n @param commitment_id The ID of the commitment.\n @return Time after which the committed answer can be revealed.\n @return Whether the commitment has already been revealed or not.\n @return The committed answer, encoded as bytes32."
									},
									"functionSelector": "839df945",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitments",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "commitment_id",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2591:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:23:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2674:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 35,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2694:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:69:0"
									},
									"scope": 59,
									"src": "2570:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2736:718:0",
										"text": "@notice Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\n @dev Doesn't require (or allow) a bond. Required only in v2.1.\n @param question_id The ID of the question\n @param answer The answer, encoded into bytes32\n @param payee_if_wrong The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\n @param last_history_hash The history hash before the final one\n @param last_answer_or_commitment_id The last answer given, or the commitment ID if it was a commitment.\n @param last_answerer The address that supplied the last answer"
									},
									"functionSelector": "d44e293c",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assignWinnerAndSubmitAnswerByArbitrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3517:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "payee_if_wrong",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3570:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "last_history_hash",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3602:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "last_answer_or_commitment_id",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3637:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "last_answerer",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3683:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:203:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3719:0:0"
									},
									"scope": 59,
									"src": "3459:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "366:3356:0"
						}
					],
					"src": "157:3566:0"
				},
				"id": 0
			},
			"contracts/placePixel.sol": {
				"ast": {
					"absolutePath": "contracts/placePixel.sol",
					"exportedSymbols": {
						"IRealitio": [
							59
						],
						"placePixel": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "74:23:1"
						},
						{
							"absolutePath": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
							"file": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
							"id": 62,
							"nodeType": "ImportDirective",
							"scope": 173,
							"sourceUnit": 60,
							"src": "99:74:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "placePixel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 68,
									"name": "PixelsChange",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "_n",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "221:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 63,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "221:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pixels",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "232:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 65,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:26:1"
									},
									"src": "202:45:1"
								},
								{
									"constant": false,
									"functionSelector": "585dcc0a",
									"id": 70,
									"mutability": "mutable",
									"name": "costPerPixel",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "252:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3f480d9",
									"id": 72,
									"mutability": "mutable",
									"name": "challengePeriod",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "285:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f7b6d32",
									"id": 74,
									"mutability": "mutable",
									"name": "length",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "321:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 73,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f340fa01",
									"id": 78,
									"mutability": "mutable",
									"name": "deposit",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "348:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 77,
										"keyType": {
											"id": 75,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "357:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "348:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 76,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "366:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "457:89:1",
										"statements": [
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "costPerPixel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "467:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "_costPerPixel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "482:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "467:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "467:28:1"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "challengePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "505:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "_challengePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "523:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "505:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "505:34:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "_costPerPixel",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "408:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "_challengePeriod",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "431:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:49:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:0:1"
									},
									"scope": 172,
									"src": "396:150:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "597:7:1",
										"statements": []
									},
									"functionSelector": "c63ff8dd",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "567:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "567:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:21:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:1"
									},
									"scope": 172,
									"src": "552:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "664:83:1",
										"statements": [
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "716:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 106,
															"name": "_pixels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "725:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "725:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "716:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "716:23:1"
											}
										]
									},
									"functionSelector": "b3d7a2d2",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changePixels",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_pixels",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "632:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "632:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:24:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:0:1"
									},
									"scope": 172,
									"src": "610:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "825:218:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "xx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "843:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 124,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "849:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "843:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6420617265612e",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "852:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															},
															"value": "Invald area."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "835:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "835:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "yy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "885:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 131,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "891:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "885:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6420617265612e",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															},
															"value": "Invald area."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "877:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "877:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "877:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 137,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "927:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "927:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 139,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 117,
																						"src": "940:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 140,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 113,
																						"src": "943:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"src": "940:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "945:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "940:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"id": 144,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "939:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 145,
																						"name": "yy",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 119,
																						"src": "949:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 146,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 115,
																						"src": "952:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"src": "949:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 148,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "954:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "949:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"id": 150,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "948:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "939:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 152,
																	"name": "costPerPixel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "957:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "939:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "927:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206465706f7369742e",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "971:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_236c417d7c93cd4b56740049e7ba1a4e465bf4e2f9bfdb3d80e4f7adcb221434",
																"typeString": "literal_string \"Insufficient deposit.\""
															},
															"value": "Insufficient deposit."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_236c417d7c93cd4b56740049e7ba1a4e465bf4e2f9bfdb3d80e4f7adcb221434",
																"typeString": "literal_string \"Insufficient deposit.\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "919:76:1"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 158,
															"name": "deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 161,
														"indexExpression": {
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1013:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1013:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1005:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 162,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1027:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1027:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1005:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1005:31:1"
											}
										]
									},
									"functionSelector": "b015852e",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "767:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "767:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "777:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 114,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "777:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "xx",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "787:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 116,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "787:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "yy",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "798:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 118,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "798:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:42:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:1"
									},
									"scope": 172,
									"src": "753:290:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1084:8:1",
										"statements": []
									},
									"functionSelector": "117df088",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:1"
									},
									"scope": 172,
									"src": "1049:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 173,
							"src": "175:919:1"
						}
					],
					"src": "74:1021:1"
				},
				"id": 1
			}
		}
	}
}