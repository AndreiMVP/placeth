{
	"id": "a8ccbf7c8ed4168a32056be2c1336e73",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/placePixel.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@shotaronowhere]\n */\n\npragma solidity ^0.7.6;\n\nimport \"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\";\n\ncontract placePixel {\n\n    event PixelsChange(uint64 _n, bytes _pixels);\n    uint256 costPerPixel;\n\n    constructor(uint256 _costPerPixel) {\n        costPerPixel = _costPerPixel;\n    }\n\n    function claim(bytes calldata data) external {\n    }\n\n    function changePixels(uint64 _n, bytes calldata _pixels) external{\n        emit PixelsChange(_n, _pixels);\n\n    }\n\n    function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{\n        require(xx >= x, \"Invald area.\");\n        require(yy >= y, \"Invald area.\");\n        require(msg.value > (xx-x)*(yy-y)*costPerPixel, \"Insufficient deposit.\");\n\n    }\n\n    function withdrawDeposit() external{\n\n    }\n}\n"
			},
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@hbarcelos]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.7.6;\n\n/**\n *  @title IRealitio\n *  @dev Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.\n */\ninterface IRealitio {\n    /// @notice Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\n    /// @dev The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\n    /// @param question_id The ID of the question\n    /// @param requester The account that requested arbitration\n    /// @param max_previous If specified, reverts if a bond higher than this was submitted after you sent your transaction.\n    function notifyOfArbitrationRequest(\n        bytes32 question_id,\n        address requester,\n        uint256 max_previous\n    ) external;\n\n    /// @notice Submit the answer for a question, for use by the arbitrator.\n    /// @dev Doesn't require (or allow) a bond. Required only in v2.0.\n    /// If the current final answer is correct, the account should be whoever submitted it.\n    /// If the current final answer is wrong, the account should be whoever paid for arbitration.\n    /// However, the answerer stipulations are not enforced by the contract.\n    /// @param question_id The ID of the question.\n    /// @param answer The answer, encoded into bytes32.\n    /// @param answerer The account credited with this answer for the purpose of bond claims.\n    function submitAnswerByArbitrator(\n        bytes32 question_id,\n        bytes32 answer,\n        address answerer\n    ) external;\n\n    /// @notice Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\n    /// @dev Required only in v2.0.\n    /// @param question_id The ID of the question.\n    /// @dev Updated on each answer, then rewound as each is claimed.\n    function getHistoryHash(bytes32 question_id) external view returns (bytes32);\n\n    /// @notice Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\n    /// @dev Required only in v2.0.\n    /// @param commitment_id The ID of the commitment.\n    /// @return Time after which the committed answer can be revealed.\n    /// @return Whether the commitment has already been revealed or not.\n    /// @return The committed answer, encoded as bytes32.\n    function commitments(bytes32 commitment_id)\n        external\n        view\n        returns (\n            uint32,\n            bool,\n            bytes32\n        );\n\n    /// @notice Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\n    /// @dev Doesn't require (or allow) a bond. Required only in v2.1.\n    /// @param question_id The ID of the question\n    /// @param answer The answer, encoded into bytes32\n    /// @param payee_if_wrong The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\n    /// @param last_history_hash The history hash before the final one\n    /// @param last_answer_or_commitment_id The last answer given, or the commitment ID if it was a commitment.\n    /// @param last_answerer The address that supplied the last answer\n    function assignWinnerAndSubmitAnswerByArbitrator(\n        bytes32 question_id,\n        bytes32 answer,\n        address payee_if_wrong,\n        bytes32 last_history_hash,\n        bytes32 last_answer_or_commitment_id,\n        address last_answerer\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"IRealitio": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "answer",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "payee_if_wrong",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "last_history_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "last_answer_or_commitment_id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "last_answerer",
									"type": "address"
								}
							],
							"name": "assignWinnerAndSubmitAnswerByArbitrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "commitment_id",
									"type": "bytes32"
								}
							],
							"name": "commitments",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								}
							],
							"name": "getHistoryHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "max_previous",
									"type": "uint256"
								}
							],
							"name": "notifyOfArbitrationRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "question_id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "answer",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "answerer",
									"type": "address"
								}
							],
							"name": "submitAnswerByArbitrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.",
						"kind": "dev",
						"methods": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": {
								"details": "Doesn't require (or allow) a bond. Required only in v2.1.",
								"params": {
									"answer": "The answer, encoded into bytes32",
									"last_answer_or_commitment_id": "The last answer given, or the commitment ID if it was a commitment.",
									"last_answerer": "The address that supplied the last answer",
									"last_history_hash": "The history hash before the final one",
									"payee_if_wrong": "The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator",
									"question_id": "The ID of the question"
								}
							},
							"commitments(bytes32)": {
								"details": "Required only in v2.0.",
								"params": {
									"commitment_id": "The ID of the commitment."
								},
								"returns": {
									"_0": "Time after which the committed answer can be revealed.",
									"_1": "Whether the commitment has already been revealed or not.",
									"_2": "The committed answer, encoded as bytes32."
								}
							},
							"getHistoryHash(bytes32)": {
								"details": "Required only in v2.0.Updated on each answer, then rewound as each is claimed.",
								"params": {
									"question_id": "The ID of the question."
								}
							},
							"notifyOfArbitrationRequest(bytes32,address,uint256)": {
								"details": "The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.",
								"params": {
									"max_previous": "If specified, reverts if a bond higher than this was submitted after you sent your transaction.",
									"question_id": "The ID of the question",
									"requester": "The account that requested arbitration"
								}
							},
							"submitAnswerByArbitrator(bytes32,bytes32,address)": {
								"details": "Doesn't require (or allow) a bond. Required only in v2.0. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.",
								"params": {
									"answer": "The answer, encoded into bytes32.",
									"answerer": "The account credited with this answer for the purpose of bond claims.",
									"question_id": "The ID of the question."
								}
							}
						},
						"title": "IRealitio",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": "d44e293c",
							"commitments(bytes32)": "839df945",
							"getHistoryHash(bytes32)": "82ffa9f7",
							"notifyOfArbitrationRequest(bytes32,address,uint256)": "f6a94ecb",
							"submitAnswerByArbitrator(bytes32,bytes32,address)": "fe92049d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"payee_if_wrong\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"last_history_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"last_answer_or_commitment_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"last_answerer\",\"type\":\"address\"}],\"name\":\"assignWinnerAndSubmitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment_id\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getHistoryHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"}],\"name\":\"notifyOfArbitrationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"}],\"name\":\"submitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator.\",\"kind\":\"dev\",\"methods\":{\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond. Required only in v2.1.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"last_answer_or_commitment_id\":\"The last answer given, or the commitment ID if it was a commitment.\",\"last_answerer\":\"The address that supplied the last answer\",\"last_history_hash\":\"The history hash before the final one\",\"payee_if_wrong\":\"The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\",\"question_id\":\"The ID of the question\"}},\"commitments(bytes32)\":{\"details\":\"Required only in v2.0.\",\"params\":{\"commitment_id\":\"The ID of the commitment.\"},\"returns\":{\"_0\":\"Time after which the committed answer can be revealed.\",\"_1\":\"Whether the commitment has already been revealed or not.\",\"_2\":\"The committed answer, encoded as bytes32.\"}},\"getHistoryHash(bytes32)\":{\"details\":\"Required only in v2.0.Updated on each answer, then rewound as each is claimed.\",\"params\":{\"question_id\":\"The ID of the question.\"}},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"details\":\"The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\",\"params\":{\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\",\"requester\":\"The account that requested arbitration\"}},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond. Required only in v2.0. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.\",\"params\":{\"answer\":\"The answer, encoded into bytes32.\",\"answerer\":\"The account credited with this answer for the purpose of bond claims.\",\"question_id\":\"The ID of the question.\"}}},\"title\":\"IRealitio\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\"},\"commitments(bytes32)\":{\"notice\":\"Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\"},\"getHistoryHash(bytes32)\":{\"notice\":\"Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\"},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"notice\":\"Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\"},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":\"IRealitio\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":{\"keccak256\":\"0x40520a925e9342f10f31f4c324be4a0da640e09d362166e5d53df1af45716940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f612effc7a157094eb24f529d510314900f8059a94041f3a1bb033855ddc2454\",\"dweb:/ipfs/QmeMoqcWaNFY29fjciDoGJAhzKo3RfknsRosL9X2hZYTWa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)": {
								"notice": "Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details."
							},
							"commitments(bytes32)": {
								"notice": "Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct."
							},
							"getHistoryHash(bytes32)": {
								"notice": "Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct."
							},
							"notifyOfArbitrationRequest(bytes32,address,uint256)": {
								"notice": "Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision."
							},
							"submitAnswerByArbitrator(bytes32,bytes32,address)": {
								"notice": "Submit the answer for a question, for use by the arbitrator."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/placePixel.sol": {
				"placePixel": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_costPerPixel",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "_n",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_pixels",
									"type": "bytes"
								}
							],
							"name": "PixelsChange",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_n",
									"type": "uint64"
								},
								{
									"internalType": "bytes",
									"name": "_pixels",
									"type": "bytes"
								}
							],
							"name": "changePixels",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "x",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "y",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "xx",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "yy",
									"type": "uint16"
								}
							],
							"name": "lock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/placePixel.sol\":175:839  contract placePixel {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/placePixel.sol\":279:359  constructor(uint256 _costPerPixel) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"contracts/placePixel.sol\":324:336  costPerPixel */\n  0x00\n    /* \"contracts/placePixel.sol\":324:352  costPerPixel = _costPerPixel */\n  sstore\n    /* \"contracts/placePixel.sol\":175:839  contract placePixel {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/placePixel.sol\":175:839  contract placePixel {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x117df088\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb015852e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc63ff8dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcdd8e3e5\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/placePixel.sol\":794:837  function withdrawDeposit() external{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/placePixel.sol\":542:788  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      0xffff\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      dup2\n      and\n      swap2\n      0x60\n      add\n      calldataload\n      and\n      tag_11\n      jump\t// in\n        /* \"contracts/placePixel.sol\":365:417  function claim(bytes calldata data) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_18\n      jump\t// in\n        /* \"contracts/placePixel.sol\":423:536  function changePixels(uint64 _n, bytes calldata _pixels) external{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      0xffffffffffffffff\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_25\n      jump\t// in\n        /* \"contracts/placePixel.sol\":794:837  function withdrawDeposit() external{... */\n    tag_8:\n      jump\t// out\n        /* \"contracts/placePixel.sol\":542:788  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n    tag_11:\n        /* \"contracts/placePixel.sol\":638:639  x */\n      dup4\n        /* \"contracts/placePixel.sol\":632:639  xx >= x */\n      0xffff\n      and\n        /* \"contracts/placePixel.sol\":632:634  xx */\n      dup3\n        /* \"contracts/placePixel.sol\":632:639  xx >= x */\n      0xffff\n      and\n      lt\n      iszero\n        /* \"contracts/placePixel.sol\":624:656  require(xx >= x, \"Invald area.\") */\n      tag_28\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b6321030b932b097)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/placePixel.sol\":680:681  y */\n      dup3\n        /* \"contracts/placePixel.sol\":674:681  yy >= y */\n      0xffff\n      and\n        /* \"contracts/placePixel.sol\":674:676  yy */\n      dup2\n        /* \"contracts/placePixel.sol\":674:681  yy >= y */\n      0xffff\n      and\n      lt\n      iszero\n        /* \"contracts/placePixel.sol\":666:698  require(yy >= y, \"Invald area.\") */\n      tag_29\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b6321030b932b097)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/placePixel.sol\":742:754  costPerPixel */\n      sload(0x00)\n        /* \"contracts/placePixel.sol\":739:740  y */\n      dup4\n        /* \"contracts/placePixel.sol\":736:738  yy */\n      dup3\n        /* \"contracts/placePixel.sol\":736:740  yy-y */\n      sub\n        /* \"contracts/placePixel.sol\":732:733  x */\n      dup6\n        /* \"contracts/placePixel.sol\":729:731  xx */\n      dup5\n        /* \"contracts/placePixel.sol\":729:733  xx-x */\n      sub\n        /* \"contracts/placePixel.sol\":728:741  (xx-x)*(yy-y) */\n      mul\n        /* \"contracts/placePixel.sol\":728:754  (xx-x)*(yy-y)*costPerPixel */\n      0xffff\n      and\n      mul\n        /* \"contracts/placePixel.sol\":716:725  msg.value */\n      callvalue\n        /* \"contracts/placePixel.sol\":716:754  msg.value > (xx-x)*(yy-y)*costPerPixel */\n      gt\n        /* \"contracts/placePixel.sol\":708:780  require(msg.value > (xx-x)*(yy-y)*costPerPixel, \"Insufficient deposit.\") */\n      tag_30\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x24b739bab33334b1b4b2b73a103232b837b9b4ba17)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_30:\n        /* \"contracts/placePixel.sol\":542:788  function lock(uint16 x, uint16 y, uint16 xx, uint16 yy) external payable{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/placePixel.sol\":365:417  function claim(bytes calldata data) external {... */\n    tag_18:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/placePixel.sol\":423:536  function changePixels(uint64 _n, bytes calldata _pixels) external{... */\n    tag_25:\n        /* \"contracts/placePixel.sol\":503:528  PixelsChange(_n, _pixels) */\n      0x9733cc983acbb5bc34f1beb2f9a6fcf17855246773099d1f1a8fd9a7b69c0312\n        /* \"contracts/placePixel.sol\":516:518  _n */\n      dup4\n        /* \"contracts/placePixel.sol\":520:527  _pixels */\n      dup4\n      dup4\n        /* \"contracts/placePixel.sol\":503:528  PixelsChange(_n, _pixels) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap7\n      pop\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"contracts/placePixel.sol\":423:536  function changePixels(uint64 _n, bytes calldata _pixels) external{... */\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220630b1487ed1b98a44dc4d3ddc4baed9c1f9cd525140f6ce8406e0b0ce001dc1064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103913803806103918339818101604052602081101561003357600080fd5b505160005561034a806100476000396000f3fe60806040526004361061003f5760003560e01c8063117df08814610044578063b015852e1461005b578063c63ff8dd14610094578063cdd8e3e514610111575b600080fd5b34801561005057600080fd5b5061005961019f565b005b6100596004803603608081101561007157600080fd5b5061ffff81358116916020810135821691604082013581169160600135166101a1565b3480156100a057600080fd5b50610059600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184600183028401116401000000008311171561010657600080fd5b509092509050610299565b34801561011d57600080fd5b506100596004803603604081101561013457600080fd5b67ffffffffffffffff823516919081019060408101602082013564010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b50909250905061029d565b565b8361ffff168261ffff1610156101ed576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b8261ffff168161ffff161015610239576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b6000548382038584030261ffff16023411610293576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103232b837b9b4ba1760591b604482015290519081900360640190fd5b50505050565b5050565b7f9733cc983acbb5bc34f1beb2f9a6fcf17855246773099d1f1a8fd9a7b69c0312838383604051808467ffffffffffffffff168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a150505056fea2646970667358221220630b1487ed1b98a44dc4d3ddc4baed9c1f9cd525140f6ce8406e0b0ce001dc1064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x391 CODESIZE SUB DUP1 PUSH2 0x391 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SSTORE PUSH2 0x34A DUP1 PUSH2 0x47 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x117DF088 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xB015852E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xC63FF8DD EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xCDD8E3E5 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 ADD CALLDATALOAD AND PUSH2 0x1A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x299 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x29D JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 DUP3 SUB DUP6 DUP5 SUB MUL PUSH2 0xFFFF AND MUL CALLVALUE GT PUSH2 0x293 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103232B837B9B4BA17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9733CC983ACBB5BC34F1BEB2F9A6FCF17855246773099D1F1A8FD9A7B69C0312 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xB1487ED SHL SWAP9 LOG4 0x4D 0xC4 0xD3 0xDD 0xC4 0xBA 0xED SWAP13 0x1F SWAP13 0xD5 0x25 EQ 0xF PUSH13 0xE8406E0B0CE001DC1064736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "175:664:1:-:0;;;279:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;279:80:1;324:12;:28;175:664;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c8063117df08814610044578063b015852e1461005b578063c63ff8dd14610094578063cdd8e3e514610111575b600080fd5b34801561005057600080fd5b5061005961019f565b005b6100596004803603608081101561007157600080fd5b5061ffff81358116916020810135821691604082013581169160600135166101a1565b3480156100a057600080fd5b50610059600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184600183028401116401000000008311171561010657600080fd5b509092509050610299565b34801561011d57600080fd5b506100596004803603604081101561013457600080fd5b67ffffffffffffffff823516919081019060408101602082013564010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b50909250905061029d565b565b8361ffff168261ffff1610156101ed576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b8261ffff168161ffff161015610239576040805162461bcd60e51b815260206004820152600c60248201526b24b73b30b6321030b932b09760a11b604482015290519081900360640190fd5b6000548382038584030261ffff16023411610293576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103232b837b9b4ba1760591b604482015290519081900360640190fd5b50505050565b5050565b7f9733cc983acbb5bc34f1beb2f9a6fcf17855246773099d1f1a8fd9a7b69c0312838383604051808467ffffffffffffffff168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a150505056fea2646970667358221220630b1487ed1b98a44dc4d3ddc4baed9c1f9cd525140f6ce8406e0b0ce001dc1064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x117DF088 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xB015852E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xC63FF8DD EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xCDD8E3E5 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 ADD CALLDATALOAD AND PUSH2 0x1A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x299 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x29D JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B6321030B932B097 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 DUP3 SUB DUP6 DUP5 SUB MUL PUSH2 0xFFFF AND MUL CALLVALUE GT PUSH2 0x293 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103232B837B9B4BA17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9733CC983ACBB5BC34F1BEB2F9A6FCF17855246773099D1F1A8FD9A7B69C0312 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xB1487ED SHL SWAP9 LOG4 0x4D 0xC4 0xD3 0xDD 0xC4 0xBA 0xED SWAP13 0x1F SWAP13 0xD5 0x25 EQ 0xF PUSH13 0xE8406E0B0CE001DC1064736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "175:664:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:43;;;;;;;;;;;;;:::i;:::-;;542:246;;;;;;;;;;;;;;;;-1:-1:-1;542:246:1;;;;;;;;;;;;;;;;;;;;;;;;;:::i;365:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;365:52:1;;-1:-1:-1;365:52:1;-1:-1:-1;365:52:1;:::i;423:113::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:113:1;;-1:-1:-1;423:113:1;-1:-1:-1;423:113:1;:::i;794:43::-;:::o;542:246::-;638:1;632:7;;:2;:7;;;;624:32;;;;;-1:-1:-1;;;624:32:1;;;;;;;;;;;;-1:-1:-1;;;624:32:1;;;;;;;;;;;;;;;680:1;674:7;;:2;:7;;;;666:32;;;;;-1:-1:-1;;;666:32:1;;;;;;;;;;;;-1:-1:-1;;;666:32:1;;;;;;;;;;;;;;;742:12;;739:1;736:2;:4;732:1;729:2;:4;728:13;:26;;;716:9;:38;708:72;;;;;-1:-1:-1;;;708:72:1;;;;;;;;;;;;-1:-1:-1;;;708:72:1;;;;;;;;;;;;;;;542:246;;;;:::o;365:52::-;;;:::o;423:113::-;503:25;516:2;520:7;;503:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;503:25:1;;;;;;;;-1:-1:-1;503:25:1;;-1:-1:-1;;;;;503:25:1;423:113;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "168400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changePixels(uint64,bytes)": "infinite",
								"claim(bytes)": "380",
								"lock(uint16,uint16,uint16,uint16)": "1270",
								"withdrawDeposit()": "122"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 279,
									"end": 359,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 279,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 324,
									"end": 336,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 175,
									"end": 839,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 839,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220630b1487ed1b98a44dc4d3ddc4baed9c1f9cd525140f6ce8406e0b0ce001dc1064736f6c63430007060033",
									".code": [
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "117DF088"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "B015852E"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "C63FF8DD"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "CDD8E3E5"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 837,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 632,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 632,
											"end": 639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 632,
											"end": 634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 632,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 632,
											"end": 639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 632,
											"end": 639,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 632,
											"end": 639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B6321030B932B097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 624,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 674,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 674,
											"end": 681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 674,
											"end": 681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 681,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 674,
											"end": 681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B6321030B932B097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 666,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 754,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 736,
											"end": 738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 736,
											"end": 740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 732,
											"end": 733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 729,
											"end": 731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 729,
											"end": 733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 728,
											"end": 741,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 728,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 728,
											"end": 754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 728,
											"end": 754,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 716,
											"end": 725,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 716,
											"end": 754,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A103232B837B9B4BA17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 708,
											"end": 780,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 708,
											"end": 780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "9733CC983ACBB5BC34F1BEB2F9A6FCF17855246773099D1F1A8FD9A7B69C0312"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 520,
											"end": 527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 520,
											"end": 527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 503,
											"end": 528,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 536,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changePixels(uint64,bytes)": "cdd8e3e5",
							"claim(bytes)": "c63ff8dd",
							"lock(uint16,uint16,uint16,uint16)": "b015852e",
							"withdrawDeposit()": "117df088"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_costPerPixel\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_n\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_pixels\",\"type\":\"bytes\"}],\"name\":\"PixelsChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_n\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_pixels\",\"type\":\"bytes\"}],\"name\":\"changePixels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"x\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"y\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"xx\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"yy\",\"type\":\"uint16\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/placePixel.sol\":\"placePixel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol\":{\"keccak256\":\"0x40520a925e9342f10f31f4c324be4a0da640e09d362166e5d53df1af45716940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f612effc7a157094eb24f529d510314900f8059a94041f3a1bb033855ddc2454\",\"dweb:/ipfs/QmeMoqcWaNFY29fjciDoGJAhzKo3RfknsRosL9X2hZYTWa\"]},\"contracts/placePixel.sol\":{\"keccak256\":\"0x82c5a40d1c46e38357e5eddb5673d35c2e3e4e97eee715c4d8765e15932c50fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95c1d49f0196b047793fb5cf0bb5f8d0e1a9c734506d2bbb73b8b5302af67af\",\"dweb:/ipfs/QmQUTRw2Au8Bt7FHBbiAD6Csyh9nA1FDMLMpn93pMqJbfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "contracts/placePixel.sol:placePixel",
								"label": "costPerPixel",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol": {
				"ast": {
					"absolutePath": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
					"exportedSymbols": {
						"IRealitio": [
							59
						]
					},
					"id": 60,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "157:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "182:183:0",
								"text": "  @title IRealitio\n  @dev Required subset of https://github.com/realitio/realitio-contracts/blob/master/truffle/contracts/IRealitio.sol to implement a Realitio arbitrator."
							},
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "IRealitio",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "392:470:0",
										"text": "@notice Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\n @dev The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\n @param question_id The ID of the question\n @param requester The account that requested arbitration\n @param max_previous If specified, reverts if a bond higher than this was submitted after you sent your transaction."
									},
									"functionSelector": "f6a94ecb",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyOfArbitrationRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "912:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "requester",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "941:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "max_previous",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "968:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:92:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:0"
									},
									"scope": 59,
									"src": "867:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "1010:611:0",
										"text": "@notice Submit the answer for a question, for use by the arbitrator.\n @dev Doesn't require (or allow) a bond. Required only in v2.0.\n If the current final answer is correct, the account should be whoever submitted it.\n If the current final answer is wrong, the account should be whoever paid for arbitration.\n However, the answerer stipulations are not enforced by the contract.\n @param question_id The ID of the question.\n @param answer The answer, encoded into bytes32.\n @param answerer The account credited with this answer for the purpose of bond claims."
									},
									"functionSelector": "fe92049d",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitAnswerByArbitrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1669:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "answerer",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1659:85:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:0"
									},
									"scope": 59,
									"src": "1626:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1760:292:0",
										"text": "@notice Returns the history hash of the question. Required before calling submitAnswerByArbitrator to make sure history is correct.\n @dev Required only in v2.0.\n @param question_id The ID of the question.\n @dev Updated on each answer, then rewound as each is claimed."
									},
									"functionSelector": "82ffa9f7",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHistoryHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "2081:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 24,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:21:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "2125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:9:0"
									},
									"scope": 59,
									"src": "2057:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2140:425:0",
										"text": "@notice Returns the commitment info by its id. Required before calling submitAnswerByArbitrator to make sure history is correct.\n @dev Required only in v2.0.\n @param commitment_id The ID of the commitment.\n @return Time after which the committed answer can be revealed.\n @return Whether the commitment has already been revealed or not.\n @return The committed answer, encoded as bytes32."
									},
									"functionSelector": "839df945",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitments",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "commitment_id",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2591:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:23:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2674:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 35,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2694:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:69:0"
									},
									"scope": 59,
									"src": "2570:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2736:718:0",
										"text": "@notice Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\n @dev Doesn't require (or allow) a bond. Required only in v2.1.\n @param question_id The ID of the question\n @param answer The answer, encoded into bytes32\n @param payee_if_wrong The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\n @param last_history_hash The history hash before the final one\n @param last_answer_or_commitment_id The last answer given, or the commitment ID if it was a commitment.\n @param last_answerer The address that supplied the last answer"
									},
									"functionSelector": "d44e293c",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assignWinnerAndSubmitAnswerByArbitrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "question_id",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3517:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "payee_if_wrong",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3570:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "last_history_hash",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3602:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "last_answer_or_commitment_id",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3637:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "last_answerer",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3683:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:203:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3719:0:0"
									},
									"scope": 59,
									"src": "3459:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "366:3356:0"
						}
					],
					"src": "157:3566:0"
				},
				"id": 0
			},
			"contracts/placePixel.sol": {
				"ast": {
					"absolutePath": "contracts/placePixel.sol",
					"exportedSymbols": {
						"IRealitio": [
							59
						],
						"placePixel": [
							148
						]
					},
					"id": 149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "74:23:1"
						},
						{
							"absolutePath": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
							"file": "@kleros/realitio-arbitrator-with-appeals/contracts/IRealitio.sol",
							"id": 62,
							"nodeType": "ImportDirective",
							"scope": 149,
							"sourceUnit": 60,
							"src": "99:74:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 148,
							"linearizedBaseContracts": [
								148
							],
							"name": "placePixel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 68,
									"name": "PixelsChange",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "_n",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "221:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 63,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "221:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pixels",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "232:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 65,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:26:1"
									},
									"src": "202:45:1"
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "costPerPixel",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "252:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "314:45:1",
										"statements": [
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "costPerPixel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "324:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 76,
														"name": "_costPerPixel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "339:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "324:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "324:28:1"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_costPerPixel",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "291:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:23:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:1"
									},
									"scope": 148,
									"src": "279:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "410:7:1",
										"statements": []
									},
									"functionSelector": "c63ff8dd",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "380:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "380:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:21:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:0:1"
									},
									"scope": 148,
									"src": "365:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "488:48:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 94,
															"name": "_n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "516:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 95,
															"name": "_pixels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 93,
														"name": "PixelsChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "503:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint64,bytes memory)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "503:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "498:30:1"
											}
										]
									},
									"functionSelector": "cdd8e3e5",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changePixels",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_n",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 87,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "445:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_pixels",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "456:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 89,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "456:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:35:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:0:1"
									},
									"scope": 148,
									"src": "423:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "614:174:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 111,
																"name": "xx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "632:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 112,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "638:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "632:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6420617265612e",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															},
															"value": "Invald area."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "624:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "624:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 118,
																"name": "yy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "674:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 119,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "680:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "674:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6420617265612e",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "683:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															},
															"value": "Invald area."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745f080213e697f277ec3d46ccda120a54bddf2bd4670c56037bdafe67644935",
																"typeString": "literal_string \"Invald area.\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "666:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "666:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "666:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "716:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "716:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 127,
																					"name": "xx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 105,
																					"src": "729:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 128,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "732:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "729:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"id": 130,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "728:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 131,
																					"name": "yy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 107,
																					"src": "736:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 132,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 103,
																					"src": "739:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "736:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"id": 134,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "735:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "728:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 136,
																	"name": "costPerPixel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "742:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "728:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "716:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206465706f7369742e",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "756:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_236c417d7c93cd4b56740049e7ba1a4e465bf4e2f9bfdb3d80e4f7adcb221434",
																"typeString": "literal_string \"Insufficient deposit.\""
															},
															"value": "Insufficient deposit."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_236c417d7c93cd4b56740049e7ba1a4e465bf4e2f9bfdb3d80e4f7adcb221434",
																"typeString": "literal_string \"Insufficient deposit.\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "708:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "708:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "708:72:1"
											}
										]
									},
									"functionSelector": "b015852e",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "556:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 100,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "566:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 102,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "xx",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "576:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 104,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "yy",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "587:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 106,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "587:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:42:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:1"
									},
									"scope": 148,
									"src": "542:246:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "829:8:1",
										"statements": []
									},
									"functionSelector": "117df088",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:0:1"
									},
									"scope": 148,
									"src": "794:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 149,
							"src": "175:664:1"
						}
					],
					"src": "74:766:1"
				},
				"id": 1
			}
		}
	}
}